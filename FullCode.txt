CoNerekli/
├── manifest.json
├── background.js
├── contentScript.js
├── popup.html
├── popup.css
├── popup.js
├── styles.css
└── icons/
    ├── icon16.png
    ├── icon32.png
    ├── icon48.png
    └── icon128.png


{
  "manifest_version": 3,
  "name": "CoNeřekli",
  "version": "1.0",
  "description": "Sdílejte poznámky k inzerátům na realitních a dalších inzertních serverech.",
  "permissions": ["storage", "activeTab", "scripting"],
  "host_permissions": ["https://www.sreality.cz/*"],
  "background": {
    "service_worker": "background.js"
  },
  "action": {
    "default_popup": "popup.html",
    "default_icon": {
      "16": "icons/icon16.png",
      "32": "icons/icon32.png",
      "48": "icons/icon48.png",
      "128": "icons/icon128.png"
    }
  },
  "content_scripts": [
    {
      "matches": ["https://www.sreality.cz/*"],
      "js": ["contentScript.js"],
      "css": ["styles.css"]
    }
  ]
}


// background.js

chrome.runtime.onInstalled.addListener(() => {
  console.log("CoNeřekli background script běží.");
});


// contentScript.js

// Import Firebase SDK (použijte cestu ke staženým souborům SDK nebo CDN)
const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "YOUR_PROJECT_ID.firebaseapp.com",
  projectId: "YOUR_PROJECT_ID",
  databaseURL: "https://YOUR_PROJECT_ID.firebaseio.com"
};

// Inicializace Firebase
if (!firebase.apps.length) {
  firebase.initializeApp(firebaseConfig);
}

function createNotesPanel() {
  const panel = document.createElement('div');
  panel.id = 'conerekli-notes-panel';
  panel.innerHTML = `
    <textarea id="note-input" placeholder="Napište svoji poznámku..."></textarea>
    <button id="save-note">Uložit poznámku</button>
    <div id="notes-display"><p>Načítám poznámky...</p></div>
  `;

  // Přidání stylů přímo v JavaScriptu
  panel.style.position = 'fixed';
  panel.style.top = '50px';
  panel.style.right = '20px';
  panel.style.width = '320px';
  panel.style.backgroundColor = '#f9f9f9';
  panel.style.border = '1px solid #ddd';
  panel.style.padding = '15px';
  panel.style.zIndex = '9999';
  panel.style.fontFamily = 'Arial, sans-serif';
  panel.style.boxShadow = '0 2px 5px rgba(0,0,0,0.3)';

  document.body.appendChild(panel);

  document.getElementById('save-note').addEventListener('click', saveNote);
  loadNotes();
}

function saveNote() {
  const noteContent = document.getElementById('note-input').value.trim();
  const listingUrl = window.location.href;

  if (!noteContent) {
    alert('Prosím napište poznámku před uložením.');
    return;
  }

  const notesRef = firebase.firestore().collection('notes');
  notesRef.add({
    url: listingUrl,
    content: noteContent,
    timestamp: firebase.firestore.FieldValue.serverTimestamp()
  }).then(() => {
    console.log('Poznámka byla úspěšně uložena');
    document.getElementById('note-input').value = '';
    loadNotes();
  }).catch((error) => {
    console.error('Chyba při ukládání poznámky:', error);
  });
}

function loadNotes() {
  const listingUrl = window.location.href;
  const notesRef = firebase.firestore().collection('notes');
  notesRef.where('url', '==', listingUrl).orderBy('timestamp', 'desc').get()
    .then((snapshot) => {
      const notesDisplay = document.getElementById('notes-display');
      notesDisplay.innerHTML = '';

      if (snapshot.empty) {
        notesDisplay.innerHTML = '<p>Žádné poznámky zatím nejsou.</p>';
        return;
      }

      snapshot.forEach((doc) => {
        const noteData = doc.data();
        const noteElement = document.createElement('div');
        noteElement.className = 'note-item';
        noteElement.innerHTML = `
          <p>${noteData.content}</p>
          <span>${noteData.timestamp ? new Date(noteData.timestamp.toDate()).toLocaleString() : ''}</span>
        `;
        notesDisplay.appendChild(noteElement);
      });
    })
    .catch((error) => {
      console.error('Chyba při načítání poznámek:', error);
      document.getElementById('notes-display').innerHTML = '<p>Chyba při načítání poznámek.</p>';
    });
}

(function() {
  createNotesPanel();
})();


<!-- popup.html -->
<!DOCTYPE html>
<html lang="cs">
<head>
  <meta charset="UTF-8">
  <title>CoNeřekli</title>
  <link rel="stylesheet" href="popup.css">
</head>
<body>
  <div id="popup-container">
    <h1>CoNeřekli</h1>
    <div id="auth-container">
      <button id="sign-in-button">Přihlásit se pomocí Google</button>
      <button id="sign-out-button" style="display: none;">Odhlásit se</button>
    </div>
  </div>
  <!-- Firebase SDK -->
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-auth-compat.js"></script>
  <script src="popup.js"></script>
</body>
</html>



/* popup.css */

body {
  width: 300px;
  font-family: Arial, sans-serif;
  padding: 10px;
}

#popup-container h1 {
  font-size: 20px;
  margin-bottom: 15px;
}

button {
  width: 100%;
  padding: 10px;
  margin-top: 10px;
  font-size: 14px;
}



// popup.js

// Firebase konfigurace
const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "YOUR_PROJECT_ID.firebaseapp.com",
  projectId: "YOUR_PROJECT_ID",
};

// Inicializace Firebase
if (!firebase.apps.length) {
  firebase.initializeApp(firebaseConfig);
}

const provider = new firebase.auth.GoogleAuthProvider();

document.getElementById('sign-in-button').addEventListener('click', () => {
  firebase.auth().signInWithPopup(provider).then((result) => {
    console.log('Uživatel přihlášen:', result.user);
    updateUI(true);
  }).catch((error) => {
    console.error('Chyba při přihlašování:', error);
  });
});

document.getElementById('sign-out-button').addEventListener('click', () => {
  firebase.auth().signOut().then(() => {
    console.log('Uživatel odhlášen.');
    updateUI(false);
  }).catch((error) => {
    console.error('Chyba při odhlašování:', error);
  });
});

function updateUI(isSignedIn) {
  document.getElementById('sign-in-button').style.display = isSignedIn ? 'none' : 'block';
  document.getElementById('sign-out-button').style.display = isSignedIn ? 'block' : 'none';
}

firebase.auth().onAuthStateChanged((user) => {
  updateUI(!!user);
});



/* styles.css */

#conerekli-notes-panel {
  position: fixed;
  top: 50px;
  right: 20px;
  width: 320px;
  background-color: #f9f9f9;
  border: 1px solid #ddd;
  padding: 15px;
  z-index: 9999;
  font-family: Arial, sans-serif;
  box-shadow: 0 2px 5px rgba(0,0,0,0.3);
}

#conerekli-notes-panel textarea {
  width: 100%;
  height: 80px;
  resize: none;
  padding: 5px;
  font-size: 14px;
}

#conerekli-notes-panel button {
  width: 100%;
  padding: 10px;
  margin-top: 10px;
  font-size: 14px;
}

#notes-display {
  margin-top: 20px;
  max-height: 300px;
  overflow-y: auto;
}

.note-item {
  background-color: #fff;
  border: 1px solid #ddd;
  padding: 10px;
  margin-bottom: 10px;
}

.note-item p {
  margin: 0 0 5px 0;
}

.note-item span {
  font-size: 12px;
  color: #666;
}



Pokyny pro nastavení Firebase
Vytvořte projekt ve Firebase Console.
Povolte autentizaci pomocí Google:
V konzoli Firebase přejděte na Authentication > Sign-in method.
Povolte Google jako poskytovatele přihlášení.
Nastavte Firestore databázi:
Přejděte na Firestore Database a vytvořte novou databázi.
Nastavte bezpečnostní pravidla tak, aby umožňovala čtení a zápis pouze autentizovaným uživatelům.


rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /notes/{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}


Nahradťe zástupné hodnoty ve kódu:
V souborech contentScript.js a popup.js nahraďte YOUR_API_KEY a YOUR_PROJECT_ID skutečnými hodnotami z vaší Firebase konfigurace.


Důležité poznámky
Firebase SDK ve service workeru: Vzhledem k omezením v Chrome Manifest V3 není možné používat Firebase SDK přímo ve background.js. Proto je veškerá funkcionalita Firebase implementována v contentScript.js a popup.js.
Bezpečnostní pravidla: Ujistěte se, že máte v Firebase nastavená správná bezpečnostní pravidla, aby byla data chráněna před neoprávněným přístupem.
Testování: Po nahrání rozšíření do Chrome (přes chrome://extensions/ a volbu Načíst rozbalené rozšíření) otestujte, zda vše funguje podle očekávání.


